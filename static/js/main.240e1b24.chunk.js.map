{"version":3,"sources":["components/SingleInput.jsx","components/InputBox.jsx","actions/transactionsAction.js","constants/transactionsConstants.js","components/ListItem.jsx","components/List.jsx","components/MaxAmount.jsx","selectors/selectMaxAmount.js","selectors/calcSumHelper.js","components/Sum.jsx","App.jsx","reducers/index.js","reducers/transactionsReducer.js","index.js"],"names":["SingleInput","props","title","placeholder","value","type","onChange","className","defaultValue","IntputBox","state","exchangeRate","amount","exchangedValue","handleTitleChange","e","target","setState","handleExchangeRateChange","toFixed","handleAmountChange","handleClick","saveNewTransaction","this","onClick","React","Component","connect","transactions","exchValue","payload","id","uniqid","ListItem","List","map","item","key","removeFromList","renderList","MaxAmount","maxTransaction","length","sort","transaction1","transaction2","calcSumHelper","transaction","reduce","acc","parseInt","Sum","sum","App","combineReducers","listOfTransactions","action","filter","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.240e1b24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./SingleInput.css\";\r\n\r\nexport const SingleInput = props => {\r\n  const { title, placeholder, value, type, onChange } = props;\r\n  return (\r\n    <div className=\"singleInput \">\r\n      <h4 className=\"singleInput__title\">{title}</h4>\r\n      <div className=\"singleInput__input ui right  input \">\r\n        <input\r\n          placeholder={placeholder}\r\n          defaultValue={value}\r\n          type={type}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { SingleInput } from \"./SingleInput.jsx\";\r\nimport { saveTransactionAction } from \"../actions/transactionsAction\";\r\nimport \"./InputBox.css\";\r\n\r\nclass IntputBox extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    exchangeRate: 4.5,\r\n    amount: null,\r\n    exchangedValue: null\r\n  };\r\n\r\n  handleTitleChange = e => {\r\n    const value = e.target.value;\r\n    this.setState({ title: value });\r\n  };\r\n\r\n  handleExchangeRateChange = e => {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      exchangeRate: value,\r\n      exchangedValue: (value * this.state.amount).toFixed(2)\r\n    });\r\n  };\r\n\r\n  handleAmountChange = e => {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      amount: value,\r\n      exchangedValue: (value * this.state.exchangeRate).toFixed(2)\r\n    });\r\n  };\r\n\r\n  handleClick = () =>\r\n    this.props.saveNewTransaction(\r\n      this.state.title,\r\n      this.state.exchangeRate,\r\n      this.state.amount,\r\n      this.state.exchangedValue\r\n    );\r\n\r\n  render() {\r\n    const { title, exchangeRate, amount, exchangedValue } = this.state;\r\n    return (\r\n      <div className=\"inputBox\">\r\n        <SingleInput\r\n          title=\"Name of transaction:\"\r\n          placeholder=\"holidays\"\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={this.handleTitleChange}\r\n        />\r\n        <SingleInput\r\n          title=\"Exchange rate [EUR/PLN]:\"\r\n          type=\"number\"\r\n          value={exchangeRate}\r\n          onChange={this.handleExchangeRateChange}\r\n        />\r\n        <SingleInput\r\n          title=\"Enter amount [EUR]:\"\r\n          placeholder=\"3500\"\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={this.handleAmountChange}\r\n        />\r\n\r\n        <div className=\"inputBox__exchangedValue\">\r\n          You spent [PLN]:{exchangedValue}\r\n        </div>\r\n\r\n        <button\r\n          className=\"inputBox__btn ui primary button\"\r\n          onClick={this.handleClick}\r\n        >\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  transactions: state.transactions\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  saveNewTransaction: saveTransactionAction\r\n})(IntputBox);\r\n","import uniqid from \"uniqid\";\r\nimport { SAVE_ITEM, REMOVE_ITEM } from \"../constants/transactionsConstants\";\r\n\r\nexport const saveTransactionAction = (\r\n  title,\r\n  exchangeRate,\r\n  amount,\r\n  exchValue\r\n) => {\r\n  return {\r\n    type: SAVE_ITEM,\r\n    payload: {\r\n      title,\r\n      exchangeRate,\r\n      amount,\r\n      exchValue,\r\n      id: uniqid()\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeFromListAction = id => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n};\r\n","export const SAVE_ITEM = \"SAVE_ITEM\";\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\n","import React from \"react\";\r\nimport \"./ListItem.css\";\r\n\r\nexport const ListItem = props => {\r\n  const { title, exchangeRate, amount, exchValue } = props;\r\n  return (\r\n    <div className=\"listItem\">\r\n      <div className=\"listItem__title\">Name of transaction: {title} </div>\r\n      <div className=\"listItem__exchangeRate\">\r\n        Exchange rate: {exchangeRate} [EUR/PLN]\r\n      </div>\r\n      <div className=\"listItem__amount\">Amount : {amount}[EUR]</div>\r\n      <div className=\"listItem__exchValue\">You spent: {exchValue}[PLN]</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { ListItem } from \"./ListItem.jsx\";\r\nimport { removeFromListAction } from \"../actions/transactionsAction\";\r\nimport \"./List.css\";\r\n\r\nclass List extends React.Component {\r\n  renderList() {\r\n    return this.props.transactions.map(item => {\r\n      const { id, title, exchangeRate, amount, exchValue } = item;\r\n      return (\r\n        <div key={id}>\r\n          <ListItem\r\n            title={title}\r\n            exchangeRate={exchangeRate}\r\n            amount={amount}\r\n            exchValue={exchValue}\r\n          />\r\n          <button\r\n            className=\"btn negative ui button\"\r\n            onClick={() => this.props.removeFromList(item)}\r\n          >\r\n            DELETE\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list__box\">\r\n        <h1>List</h1>\r\n        <div>{this.renderList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  transactions: state.transactions\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  removeFromList: removeFromListAction\r\n})(List);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectMaxAmount } from \"../selectors/selectMaxAmount\";\r\n\r\nclass MaxAmount extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"maxAmount\">\r\n        <div>Max Amount: {this.props.maxTransaction} [EUR]</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  maxTransaction: selectMaxAmount(state.transactions)\r\n});\r\n\r\nexport default connect(mapStateToProps)(MaxAmount);\r\n","export const selectMaxAmount = transactions => {\r\n  if (transactions.length !== 0) {\r\n    return transactions.sort(\r\n      (transaction1, transaction2) => transaction2.amount - transaction1.amount\r\n    )[0].amount;\r\n  }\r\n  return 0;\r\n};\r\n","export const calcSumHelper = transaction => {\r\n  if (transaction.length !== 0) {\r\n    return transaction.reduce(\r\n      (acc, transaction) =>\r\n        parseInt(acc, 10) + parseInt(transaction.amount, 10),\r\n      0\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { calcSumHelper } from \"../selectors/calcSumHelper\";\r\n\r\nclass Sum extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Sum: {this.props.sum} [EUR] </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  sum: calcSumHelper(state.transactions)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Sum);\r\n","import React from \"react\";\r\n\r\nimport InputBox from \"./components/InputBox.jsx\";\r\nimport List from \"./components/List.jsx\";\r\nimport MaxAmount from \"./components/MaxAmount.jsx\";\r\nimport Sum from \"./components/Sum.jsx\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"max\">\r\n          <MaxAmount />\r\n          <Sum />\r\n        </div>\r\n\r\n        <InputBox />\r\n        <div>\r\n          <List />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { transacionsReducer } from \"./transactionsReducer\";\r\n\r\nexport default combineReducers({\r\n  transactions: transacionsReducer\r\n});\r\n","import { SAVE_ITEM, REMOVE_ITEM } from \"../constants/transactionsConstants\";\r\n\r\nexport const transacionsReducer = (listOfTransactions = [], action) => {\r\n  if (action.type === SAVE_ITEM) {\r\n    return [...listOfTransactions, action.payload];\r\n  } else if (action.type === REMOVE_ITEM) {\r\n    return listOfTransactions.filter(id => id !== action.payload.id);\r\n  }\r\n\r\n  return listOfTransactions;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./App.jsx\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}